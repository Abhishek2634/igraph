# We are using Python 3.5 because Python requires MSVC 14 from
# version 3.5 onwards so it does not matter which Python version we pick as
# long as it's later than 3.5.
environment:
  PATH: C:\msys64\usr\bin;C:\msys64\mingw64\bin;C:\Windows\System32;C:\Windows;%PATH%
  MSYSTEM: MINGW64
  TARGET_ARCH: "x64"

# We always use a 64-bit machine, but can build x86 distributions
# with the PYTHON_ARCH variable (which is used by CMD_IN_ENV).
platform:
    - x64

# all our builds have to happen in install...
build: false

cache: c:\tools\vcpkg\installed\

install:
    - cmd: set PYTHONUNBUFFERED=1

    # update msys2 keyring first
    - C:\msys64\usr\bin\bash -lc "curl -O http://repo.msys2.org/msys/x86_64/msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz"
    - C:\msys64\usr\bin\bash -lc "curl -O http://repo.msys2.org/msys/x86_64/msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz.sig"
    - C:\msys64\usr\bin\bash -lc "pacman --noconfirm -U msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz"

    # update msys2
    - C:\msys64\usr\bin\bash -lc "pacman --needed --noconfirm -Sy pacman-mirrors"
    - C:\msys64\usr\bin\bash -lc "pacman --noconfirm -Sy"
    - C:\msys64\usr\bin\bash -lc "pacman --noconfirm -S zstd"
    - C:\msys64\usr\bin\bash -lc "pacman --noconfirm -S bison flex"
    - C:\msys64\usr\bin\bash -lc "pacman --noconfirm -S libxml2-devel zip xz"

    # Install dependencies for MSVC build
    - choco install winflexbison
    
    - cd c:\tools\vcpkg
    - git pull
    - .\bootstrap-vcpkg.bat
    - vcpkg install gmp:x64-windows-static
    - vcpkg integrate install

    # Now start with the build
    - cmd: cd "%APPVEYOR_BUILD_FOLDER%"
    - cmd: mkdir build
    - cmd: cd build
    - cmd: call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64
    - cmd: call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86_amd64
    - cmd: cmake .. -DCMAKE_TOOLCHAIN_FILE=c:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake -DIGRAPH_GMP_SUPPORT=1 -DIGRAPH_GRAPHML_SUPPORT=0 -DIGRAPH_USE_INTERNAL_BLAS=1 -DIGRAPH_USE_INTERNAL_LAPACK=1 -DIGRAPH_USE_INTERNAL_ARPACK=1 -DIGRAPH_USE_INTERNAL_GLPK=1 -DIGRAPH_USE_INTERNAL_CXSPARSE=1 -DIGRAPH_VERIFY_FINALLY_STACK=1
    - cmd: cmake --build .

test_script:
    - cmd: cd "%APPVEYOR_BUILD_FOLDER%"
    - cmd: cd build
    - cmd: cmake --build . --target build_tests
    - cmd: ctest -C Debug

on_failure:
    - cmd: echo zipping everything after a failure...
    - cmd: cd "%APPVEYOR_BUILD_FOLDER%"
    - cmd: 7z a failed_state.zip . |grep -v "Compressing"
    - cmd: appveyor PushArtifact failed_state.zip
